# Generated by Django 4.0.6 on 2022-08-02 15:32

import api.functions.functions
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('name', models.CharField(blank=True, max_length=30, verbose_name='Full name')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='Email')),
                ('username', models.CharField(max_length=150, unique=True, verbose_name='Username')),
                ('prof_image', models.CharField(blank=True, max_length=255, verbose_name='Profile Image')),
                ('prof_desc', models.TextField(blank=True, verbose_name='Profile Desc')),
                ('followers', models.IntegerField(blank=True, default=0, verbose_name='Followers')),
                ('following', models.IntegerField(blank=True, default=0, verbose_name='Following')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Admin Status')),
                ('date_joined', models.DateTimeField(default=api.functions.functions.get_today, verbose_name='Date Joined')),
                ('last_login', models.DateTimeField(default=api.functions.functions.get_today, verbose_name='Last Login')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
